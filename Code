//Declaration et Initialisation des variables
var TT = [];
var posx, poxy, Ini, arenasizeX, arenasizeY, score, bestscore;
posx = 100;
posy = 100;
Loop(-1);
Ini = 0;
arenasizeX = 750;
arenasizeY = 900;
score = 0;
bestscore = 0;

//Création d'un prototype d'objet

function Obstacle(posX, posY, movX, movY, radius) {

  this.pos = {
    X: posX,
    Y: posY
  };

  this.mov = {
    X: movX,
    Y: movY
  };

  this.radius = radius;

  CerclePlein(posX, posY, radius, 'red');

}

function draw(c) {

  //Création des obstacles
  if (Ini == 0) {
    Ini++;
    for (var ii = 0; ii < 40; ii = ii + 1) {
      Xtranslation = Random(2);
      if (Xtranslation == 0) {
        Xtranslation = Random(4);
      } else {
        Xtranslation = -Random(4);
      }
      TT[ii] = new Obstacle(Random(741)+10, 10, Xtranslation, Random(4) + 3, Random(21)+10);
    }
  }

  Initialiser();
  
  
  //Affichage du score
  setCanvasFont('Times_New_Roman', '50px', 'bold');
  Rectangle(810, 10, 600, 235, 'black');
  Rectangle(809, 9, 602, 237, 'black');
  Rectangle(808, 8, 604, 239, 'black');
  Rectangle(807, 7, 606, 241, 'black');
  Rectangle(806, 6, 608, 243, 'black');
  Texte(830, 70, "      YOUR SCORE IS:", 'darkblue');
  Texte(1005, 120,"     " + score, 'darkblue');
  if (score >= bestscore) {
    bestscore = score;
  }
  Texte(830, 170, "YOUR  BEST SCORE IS:", 'darkblue');
  Texte(1005, 220,"     " + bestscore, 'darkblue');


  //Création de l'arène
  Rectangle(10, 10, arenasizeX, arenasizeY, 'black');
  Rectangle(9, 9, arenasizeX+2, arenasizeY+2, 'black');
  Rectangle(8, 8, arenasizeX+4, arenasizeY+4, 'black');
  Rectangle(7, 7, arenasizeX+6, arenasizeY+6, 'black');
  Rectangle(6, 6, arenasizeX+8, arenasizeY+8, 'black');

  //"Joueur"
  CerclePlein(mouseX, mouseY, 10, 'blue');

  //Update des obstacles
  for (var jj = 0; jj < TT.length; jj = jj + 1) {
    newX = TT[jj].pos.X + TT[jj].mov.X;
    newY = TT[jj].pos.Y + TT[jj].mov.Y;
    TT[jj] = new Obstacle(newX, newY, TT[jj].mov.X, TT[jj].mov.Y, TT[jj].radius);
  }

  //Collisions avec obstacles
  for (var kk = 0; kk < TT.length; kk = kk + 1) {
    if (Math.sqrt(((mouseX-TT[kk].pos.X)*(mouseX-TT[kk].pos.X))+((mouseY-TT[kk].pos.Y)*(mouseY-TT[kk].pos.Y)))<TT[kk].radius) {
      score = score - score;
    }
  }

  //Sortie du joueur de l'arène
  if ((mouseX > arenasizeX+10) || (mouseX < 10) || (mouseY > arenasizeY+10) || (mouseY < 10)) {
    score = score - score;
    Texte(900, 350, "GO BACK INSIDE", 'red');
  }

  //Destruction des obstacles en dehors de l'arène
  for (var ll = 0; ll < TT.length; ll = ll + 1) {
    if ((TT[ll].pos.X > arenasizeX) || (TT[ll].pos.X < 10) || (TT[ll].pos.Y > arenasizeY)) {
      TT[ll] = 0;
      score = score + 1;
    }
  }

  //Recréation des obstacles détruits
  for (var mm = 0; mm < TT.length; mm = mm + 1) {
    if (TT[mm] == 0) {
      Xtranslation = Random(2);
      if (Xtranslation == 0) {
        Xtranslation = Random(4);
      } else {
        Xtranslation = -Random(4);
      }
      TT[mm] = new Obstacle(Random(741)+10, 10, Xtranslation, Random(4) + 3, Random(21)+10);
    }
  }
}
